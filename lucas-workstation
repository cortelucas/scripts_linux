#!/usr/bin/env bash

# ----------------------------- VARIÁVEIS ----------------------------- #
PPA_LIBRATBAG="ppa:libratbag-piper/piper-libratbag-git"
PPA_LUTRIS="ppa:lutris-team/lutris"
PPA_GRAPHICS_DRIVERS="ppa:graphics-drivers/ppa"
PPA_PHP="ppa:ondrej/php"

URL_WINE_KEY="https://dl.winehq.org/wine-builds/winehq.key"
URL_PPA_WINE="https://dl.winehq.org/wine-builds/ubuntu/"
URL_GOOGLE_CHROME="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
URL_SIMPLE_NOTE="https://github.com/Automattic/simplenote-electron/releases/download/v1.8.0/Simplenote-linux-1.8.0-amd64.deb"
URL_4K_VIDEO_DOWNLOADER="https://dl.4kdownload.com/app/4kvideodownloader_4.9.2-1_amd64.deb"
URL_VIVALD="https://downloads.vivaldi.com/stable/vivaldi-stable_4.1.2369.11-1_amd64.deb -O vivaldi.deb"
URL_MSPACK="https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb"

DIRETORIO_DOWNLOADS="$HOME/Downloads/programas"

PROGRAMAS_PARA_INSTALAR=(
  apt-transport-https
  aspnetcore-runtime-5.0
  build-essential 
  curl
  docker
  docker-compose
  dotnet-sdk-5.0
  dotnet-runtime-5.0
  flameshot
  flatpak 
  git
  gnome-software-plugin-flatpak
  guvcview
  libasound2-plugins:i386
  libdbus-1-3:i386
  libfreetype6:i386
  libgnutls30:i386
  libgpg-error0:i386
  libldap-2.4-2:i386
  libsdl2-2.0-0:i386
  libsqlite3-0:i386
  libssl-dev 
  libvulkan1
  libvulkan1:i386
  libxml2:i386
  lutris
  mint-meta-codecs
  mysql-server 
  nemo-dropbox
  net-tools
  nodejs
  npm
  php
  php-cli
  php8.0 
  php8.0-intl 
  php8.0-mysql 
  php8.0-sqlite3 
  php8.0-gd
  piper
  python3
  python3-pip
  ratbagd
  Samba
  snapd
  software-properties-common
  speedtest-cli
  steam:i386
  steam-devices
  steam-installer
  unzip
  tree
  virtualbox
  wine
  winff
  zsh
)
# ---------------------------------------------------------------------- #

# ----------------------------- REQUISITOS ----------------------------- #
## Removendo travas eventuais do apt ##
sudo rm /var/lib/dpkg/lock-frontend
sudo rm /var/cache/apt/archives/lock

## Adicionando/Confirmando arquitetura de 32 bits ##
sudo dpkg --add-architecture i386

## Atualizando o repositório ##
sudo apt update -y

## Adicionando repositórios de terceiros e suporte a Snap (Driver Logitech, Lutris e Drivers Nvidia)##
cd ~
curl -sL https://deb.nodesource.com/setup_14.x -o nodesource_setup.sh

sudo apt-add-repository "$PPA_LIBRATBAG" -y
sudo add-apt-repository "$PPA_LUTRIS" -y
sudo apt-add-repository "$PPA_GRAPHICS_DRIVERS" -y
sudo add-apt-repository "$PPA_PHP" -y
wget -nc "$URL_WINE_KEY"
sudo apt-key add winehq.key
sudo apt-add-repository "deb $URL_PPA_WINE bionic main"
# ---------------------------------------------------------------------- #

# ----------------------------- EXECUÇÃO ----------------------------- #
## Atualizando o repositório depois da adição de novos repositórios ##
sudo apt update -y

## Download e instalaçao de programas externos ##
mkdir "$DIRETORIO_DOWNLOADS"
wget -c "$URL_GOOGLE_CHROME"       -P "$DIRETORIO_DOWNLOADS"
wget -c "$URL_SIMPLE_NOTE"         -P "$DIRETORIO_DOWNLOADS"
wget -c "$URL_4K_VIDEO_DOWNLOADER" -P "$DIRETORIO_DOWNLOADS"
wget -c "$URL_MSPACK"              -P "$DIRETORIO_DOWNLOADS"
wget -c "$URL_VIVALDI"		         -P "$DIRETORIO_DOWNLOADS"

## Instalando pacotes .deb baixados na sessão anterior ##
sudo dpkg -i $DIRETORIO_DOWNLOADS/*.deb

# Instalar programas no apt
for nome_do_programa in ${PROGRAMAS_PARA_INSTALAR[@]}; do
  if ! dpkg -l | grep -q $nome_do_programa; then # Só instala se já não estiver instalado
    sudo apt install "$nome_do_programa" -y
  else
    echo "[INSTALADO] - $nome_do_programa"
  fi
done

sudo apt install --install-recommends winehq-stable wine-stable wine-stable-i386 wine-stable-amd64 -y

# Instalar o Edge
## Setup
curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
sudo rm microsoft.gpg
## Install
sudo apt update
sudo apt install microsoft-edge-dev


## Adicionando repositório Flathub ##

sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo && 

## Instalando pacotes Flatpak ##
sudo flatpak install flathub io.dbeaver.DBeaverCommunity -y
sudo flatpak install flathub com.jetbrains.PhpStorm -y 
sudo flatpak install flathub com.spotify.Client -y
sudo flatpak install flathub com.microsoft.Teams -y
sudo flatpak install flathub com.visualstudio.code -y
sudo flatpak install flathub rest.insomnia.Insomnia -y
sudo flatpak install flathub com.wps.Office -y

## Instalando pacotes Snap ##
sudo snap install photogimp
sudo snap install --edge node --classic
sudo snap install notion-snap
# ---------------------------------------------------------------------- #

# ----------------------------- PÓS-INSTALAÇÃO ----------------------------- #
## Finalização, atualização e limpeza##
sudo apt update && sudo apt dist-upgrade -y
flatpak update
sudo apt autoclean
sudo apt autoremove -y
# ---------------------------------------------------------------------- #
